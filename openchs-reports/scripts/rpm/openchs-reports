#!/bin/bash
#
# openchs-reports        start/stop/status/debug/restart/deploy_health_modules/deploy_impl script
#
# chkconfig: - 64 36
# processname: openchs
# config: /etc/openchs
# pidfile: /var/run/openchs-reports/openchs-reports.pid

export OPENCHS_REPORTS_USER=openchs
export OPENCHS_REPORTS_RUN=/opt/openchs-reports/bin/start.sh
export CUR_USER=`/usr/bin/whoami`

. /etc/openchs-reports/openchs-reports.conf

create_dirs() {
    if [[ ! -e /var/run/openchs ]]; then
        ln -s /opt/openchs-reports/run /var/run/openchs-reports
    fi

    if [[ ! -e /var/log/openchs-reports ]]; then
        ln -s /opt/openchs-reports/log /var/log/openchs-reports
    fi
}

openchs_reports_pid() {
        echo `ps -fe | grep 'metabase.jar' | grep -v grep | tr -s " "|cut -d" " -f2`
}

start(){
    pid=$(openchs_reports_pid)
    if [ -n "$pid" ]
    then
        echo -e "\e[00;31mService openchs-reports is already running (pid: $pid)\e[00m"
    else
        # Start openchs-reports
        create_dirs
        echo -e "\e[00;32mStarting openchs-reports\e[00m"
        if [ `user_exists $OPENCHS_REPORTS_USER` = "1" ]  && [ "$CUR_USER" != "$OPENCHS_REPORTS_USER" ] ;
        then
                su -s /bin/bash $OPENCHS_REPORTS_USER $OPENCHS_REPORTS_RUN
        else
                sh $OPENCHS_REPORTS_RUN
        fi
  fi
  exit 0
}


status(){
          pid=$(openchs_reports_pid)
          if [ -n "$pid" ]; then echo -e "\e[00;32mService openchs-reports is running with pid: $pid\e[00m"
          else echo -e "\e[00;31mService openchs-reports is not running\e[00m"
          exit 3
          fi
}

stop() {
	echo -e "\e[00;31mTerminating openchs-reports\e[00m"
	kill -9 $(openchs_reports_pid)
	rm -f /var/run/openchs-reports/openchs-reports.pid
    return
}
user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}

case $1 in
	start)
	  start
	;;
    debug)
	  debug
	;;
	stop)
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
	;;
	kill)
		stop
	;;
	deploy_health_modules)
	    deploy_health_modules
	;;
	deploy_impl)
	    deploy_impl
	;;
	*)

	;;
esac
exit 0
